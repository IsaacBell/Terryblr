= semantic_form_for @post, :url => (@post.new_record? ? admin_posts_path : admin_post_path(@post)) do |f|
  
  #form_content{:class => "span-17"}
    %h2 #{params[:action].to_s.capitalize} #{@type.to_s.capitalize}
    = error_messages_for_post
    = f.semantic_errors
    - f.inputs do
      = f.input :title, :label => 'Title', :input_html => { :class => "title" }
      / %li.video-upload
      /   %label Video Upload
      /   =multi_file_uploader(:url => admin_post_videos_path(@post, :format => :js), :css_parent_class => "video-upload", :file_types => "*.mov;*.avi;*.mpg;*.3gp;*.m4v;")
      /   %p.inline-hints.clear Upload films from your computer
      / %li.video-or
      /   %span or
      %li.string.optional.video-url
        %label{:for => "post_videos_attributes__url"} Video Url
        = text_field_tag "video_url"
        = link_to_remote "Save", {:url => admin_post_videos_path(@post, :format => "js"), :submit => "video_url", :after => "$('.video-url input').val(null)"}, {:id => "save_video_btn"}
        %p.inline-hints Paste in a URL to a vimeo or youtube video
      %li.video-list
        = edit_videos_for_assoc(@post)
        %p.inline-hints.clear Reorder and caption videos

      = f.input :body, :label => 'Body', :as => 'text', :wrapper_html => { :class => "rich-text" }, :required => true

    = render :partial => 'form_buttons', :locals => {:f => f}

  =render :partial => 'form_sidebar', :locals => {:f => f}

  .clear
