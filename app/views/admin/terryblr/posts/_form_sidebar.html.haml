#form_sidebar{:class => "sidebar span-6 last"}
  = f.inputs do
    = f.input :state, :as => "hidden", :wrapper_html => { :class => "post-hidden" }
    - selected = (@post.pending? || @post.published?) ? (@post.published_at? ? :published_at : :publish_now) : @post.state.to_sym
    
    - @post.published_at = (@post.published_at || Time.now).in_time_zone # Needed to show time in user's TZ
    - label = @post.published_at.past? ? "Published on: " : "Will be published on:"

    = f.input :state, :as => "select", :collection => @post.states_for_select, :selected => selected, :include_blank => false, :wrapper_html => { :class => "post-states" }
    = f.input :published_at, :label => label, :as => "string", :wrapper_html => { :class => "date-picker", :style => "display:#{selected==:published_at ? 'block' : 'none'}"} 

    - if defined?(Settings.tags.posts.groups)
      - (Settings.tags.posts.groups - %w(tags)).each do |group|
        %li{:class => "#{group.parameterize}-tag-group tag-picker"}
          %label #{group.parameterize.tableize.singularize.humanize.titleize}
          %ul{:class => "#{group}_tag_list" }
            - Settings.tags.posts[group].each do |tag|
              %li.machine_tag{:class => "#{group}_tag" }
                = check_box_tag "post[#{group}_list][]", tag, @post.send("#{group}_list").include?(tag)
                = tag.humanize.titleize
      
      - if Settings.tags.posts.groups.include?('tags')
        %li{:class => "tags-tag-group tag-picker"}
          %label Tags
          %ul
            - Settings.tags.posts.tags.each do |tag|
              %li.jq_tags_token
                = tag
                = link_to_function "+", "$('.tag-picker input.jq_tags_editor_input').attr('value','#{tag}').blur()"
          .clear
          = text_area :post, "tag_list", :class => "tag-picker"
        
    = f.input :slug, :label => 'Custom URL', :as => "underline", :prefix => "/posts/", :hint => "Leave blank to create automatically from the title", :wrapper_html => { :class => "underlined-input" }
    = f.input :post_type, :as => "hidden"

    %li.social-callbacks
      %label Cross Posting
      %ul
        %li.machine_tag
          - if @post.twitter_id?
            = link_to("Posted to twitter", "http://twitter.com/#{Settings.twitter.login}/status/#{@post.twitter_id}")
          - elsif @post.tw_delayed_job
            %span Twitter post queued (#{@post.tw_delayed_job.run_at.to_s(:date_ordinal)})
          - else
            = check_box(:post, :tw_me)
            Post to Twitter
        %li.machine_tag
          - if @post.facebook_id?
            = link_to("Posted to facebook", "http://facebook.com/pages/#{Settings.app_name.parameterize}/#{Settings.facebook.page_id}")
          - elsif @post.fb_delayed_job
            %span Facebook post queued (#{@post.fb_delayed_job.run_at.to_s(:date_ordinal)})
          - else 
            = check_box(:post, :fb_me)
            Post to Facebook
        %li#social_message
          %label Message
          = text_area :post, :social_msg, :class=>"social_msg", :rows=>"4", :disabled => @post.twitter_id? && @post.facebook_id? && @object.live?
          %span.social_msg_chars
    
